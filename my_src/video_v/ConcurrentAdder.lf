target Cpp;

reactor Counter(stride: int(1), period: time(1 sec)) {
    state count: int(0);
    timer t(0,period);
    output out: int;
    reaction(t) -> out {=
        out.set(count);
        count += stride;
    =}
}

reactor Adder(bank_index: int(1)) {
    input in: int;
    output out: int;
    reaction (in) -> out {=
        out.set(*in.get() + bank_index);
    =}
}

reactor Printer(N:int(4)) {
    input[N] in:int;
    reaction(in) {=
        for(int i=0;i < in.size(); i++) {
            reactor::log::Info() << "Result " << i << ": " << *in[i].get();
        }
    =}
}

main reactor(stride: int(10), period: time(1 sec), N: int(4)) {
    c = new Counter(stride=stride, period=period);
    a = new[N] Adder();
    p = new Printer(N=N);
    (c.out)+ -> a.in;
    a.out -> p.in;
}